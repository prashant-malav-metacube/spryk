spryk: method
description: "Adds a get provided dependency method to the *module*BusinessFactory."
mode: both

arguments:
    module:
        inherit: true

    organization:
        inherit: true
        default: Spryker

    constantName: ~

    output: ~

    body:
        value: "return $this->getProvidedDependency(\\{{ organization }}\\Zed\\{{ module }}\\{{ module }}DependencyProvider::{{ constantName }});"

    factoryMethod:
        callbackOnly: true
        callback: ZedBusinessFactoryMethodNameCallback

    template:
        value: Common/Method.php.twig

    target:
        value: "{{ organization }}\\Zed\\{{ module }}\\Business\\{{ module }}BusinessFactory"

preSpryks:
    - AddZedBusinessFactoryGetProvidedDependencyMethod:
          arguments:
              factoryMethod:
                  value: "get{{ domainEntity }}ExtenderPlugins"
              constantName:
                  value: "PLUGINS_{{ domainEntity | camelCaseToUnderscore | uppercase }}_EXTENDER"
              output:
                  value: "\\{{ organization }}\\Zed\\{{ module }}Extension\\Dependency\\{{ domainEntity }}\\Extender\\{{ domainEntity }}ExtenderPluginInterface[]"
    - AddZedBusinessFactoryGetProvidedDependencyMethod:
          arguments:
              factoryMethod:
                  value: "get{{ domainEntity }}PreCreatePlugins"
              constantName:
                  value: "PLUGINS_{{ domainEntity | camelCaseToUnderscore | uppercase }}_PRE_CREATE"
              output:
                  value: "\\{{ organization }}\\Zed\\{{ module }}Extension\\Dependency\\{{ domainEntity }}\\Saver\\{{ domainEntity }}PreSaverPluginInterface[]"
    - AddZedBusinessFactoryGetProvidedDependencyMethod:
          arguments:
              factoryMethod:
                  value: "get{{ domainEntity }}PostCreatePlugins"
              constantName:
                  value: "PLUGINS_{{ domainEntity | camelCaseToUnderscore | uppercase }}_POST_CREATE"
              output:
                  value: "\\{{ organization }}\\Zed\\{{ module }}Extension\\Dependency\\{{ domainEntity }}\\Saver\\{{ domainEntity }}PostSaverPluginInterface[]"
    - AddZedBusinessFactoryGetProvidedDependencyMethod:
          arguments:
              factoryMethod:
                  value: "get{{ domainEntity }}PreUpdatePlugins"
              constantName:
                  value: "PLUGINS_{{ domainEntity | camelCaseToUnderscore | uppercase }}_PRE_UPDATE"
              output:
                  value: "\\{{ organization }}\\Zed\\{{ module }}Extension\\Dependency\\{{ domainEntity }}\\Saver\\{{ domainEntity }}PreSaverPluginInterface[]"
    - AddZedBusinessFactoryGetProvidedDependencyMethod:
          arguments:
              factoryMethod:
                  value: "get{{ domainEntity }}PostUpdatePlugins"
              constantName:
                  value: "PLUGINS_{{ domainEntity | camelCaseToUnderscore | uppercase }}_POST_UPDATE"
              output:
                  value: "\\{{ organization }}\\Zed\\{{ module }}Extension\\Dependency\\{{ domainEntity }}\\Saver\\{{ domainEntity }}PostSaverPluginInterface[]"
    - AddZedBusinessFactoryGetProvidedDependencyMethod:
          arguments:
              factoryMethod:
                  value: "get{{ domainEntity }}UpdateValidatorRulePlugins"
              constantName:
                  value: "PLUGINS_{{ domainEntity | camelCaseToUnderscore | uppercase }}_UPDATE_VALIDATOR"
              output:
                  value: "\\{{ organization }}\\Zed\\{{ module }}Extension\\Dependency\\{{ domainEntity }}\\Validator\\{{ domainEntity }}ValidatorRulePluginInterface[]"
    - AddZedBusinessFactoryGetProvidedDependencyMethod:
          arguments:
              factoryMethod:
                  value: "get{{ domainEntity }}CreateValidatorRulePlugins"
              constantName:
                  value: "PLUGINS_{{ domainEntity | camelCaseToUnderscore | uppercase }}_CREATE_VALIDATOR"
              output:
                  value: "\\{{ organization }}\\Zed\\{{ module }}Extension\\Dependency\\{{ domainEntity }}\\Validator\\{{ domainEntity }}ValidatorRulePluginInterface[]"
